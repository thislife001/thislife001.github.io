<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>ks.cfg</title>
      <link href="/2019/01/24/ks-cfg/"/>
      <url>/2019/01/24/ks-cfg/</url>
      <content type="html"><![CDATA[<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#version=DEVEL</span></span><br><span class="line"><span class="comment"># System authorization information</span></span><br><span class="line">auth <span class="params">--enableshadow</span> <span class="params">--passalgo=sha512</span></span><br><span class="line"><span class="comment"># Use HTTP installation</span></span><br><span class="line">url <span class="params">--url=http</span>:<span class="string">//192.168.0.62/Centos7.4</span></span><br><span class="line"><span class="comment"># Use Text install</span></span><br><span class="line">text</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">ignoredisk <span class="params">--only-use=sda</span></span><br><span class="line"><span class="comment"># Keyboard layouts</span></span><br><span class="line">keyboard <span class="params">--vckeymap=us</span> <span class="params">--xlayouts=</span>'us'</span><br><span class="line"><span class="comment"># System language</span></span><br><span class="line">lang en_US.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment"># Network information</span></span><br><span class="line">network  <span class="params">--bootproto=dhcp</span> <span class="params">--device=ens33</span> <span class="params">--onboot=off</span> <span class="params">--ipv6=auto</span> <span class="params">--no-activate</span></span><br><span class="line">network  <span class="params">--hostname=localhost</span>.localdomain</span><br><span class="line"><span class="comment"># Root password</span></span><br><span class="line">rootpw <span class="params">--iscrypted</span> $6$CwL8kNH8DP/jlG.O$JMUP7LDdzptlxFYB4Nim3yflyOwjqcFmTO/zXp43H55ouqMaRgFkGhk8n4SJTHemZdOFSG.4r5Kem96H/GsRt1</span><br><span class="line"><span class="comment"># System services</span></span><br><span class="line">services <span class="params">--disabled=</span><span class="string">"chronyd"</span></span><br><span class="line"><span class="comment"># System timezone</span></span><br><span class="line">timezone Asia/Shanghai <span class="params">--isUtc</span> <span class="params">--nontp</span></span><br><span class="line"><span class="comment"># System bootloader configuration</span></span><br><span class="line">bootloader <span class="params">--append=</span><span class="string">" crashkernel=auto"</span> <span class="params">--location=mbr</span> <span class="params">--boot-drive=sda</span></span><br><span class="line"></span><br><span class="line">clearpart <span class="params">--all</span> <span class="params">--initlabel</span></span><br><span class="line">part <span class="string">/boot</span> <span class="params">--fstype=</span><span class="string">"xfs"</span> <span class="params">--size=200</span></span><br><span class="line">part swap <span class="params">--fstype=</span><span class="string">"swap"</span> <span class="params">--size=8000</span></span><br><span class="line">part pv.10 <span class="params">--fstype=</span><span class="string">"lvmpv"</span> <span class="params">--size=2</span> <span class="params">--grow</span></span><br><span class="line">part pv.20 <span class="params">--fstype=</span><span class="string">"lvmpv"</span> <span class="params">--size=50003</span></span><br><span class="line"><span class="comment">#part pv.30 --fstype="lvmpv" --size=8000</span></span><br><span class="line">volgroup VG1 <span class="params">--pesize=4096</span> pv.10</span><br><span class="line">volgroup VG0 <span class="params">--pesize=4096</span> pv.20</span><br><span class="line"><span class="comment">#volgroup SWAP --pesize=4096 pv.30</span></span><br><span class="line">logvol <span class="string">/opt</span>  <span class="params">--fstype=</span><span class="string">"xfs"</span> <span class="params">--size=1</span> <span class="params">--name=opt</span> <span class="params">--vgname=VG1</span> <span class="params">--grow</span></span><br><span class="line"><span class="comment">#logvol swap  --fstype="swap" --size=8000 --name=swap --vgname=SWAP</span></span><br><span class="line">logvol /  <span class="params">--fstype=</span><span class="string">"xfs"</span> <span class="params">--size=50000</span> <span class="params">--name=root</span> <span class="params">--vgname=VG0</span></span><br><span class="line"></span><br><span class="line">firstboot <span class="params">--disable</span></span><br><span class="line">selinux <span class="params">--disabled</span></span><br><span class="line">firewall <span class="params">--disabled</span></span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line">%packages</span><br><span class="line">@^minimal</span><br><span class="line">@core</span><br><span class="line">kexec-tools</span><br><span class="line">ntp</span><br><span class="line">vim</span><br><span class="line">wget</span><br><span class="line">telnet</span><br><span class="line">net-tools</span><br><span class="line">git</span><br><span class="line">automake</span><br><span class="line">gcc</span><br><span class="line">gcc-c++</span><br><span class="line">bzip2</span><br><span class="line">unzip</span><br><span class="line">net-snmp</span><br><span class="line">net-snmp-devel</span><br><span class="line">sysstat</span><br><span class="line">%end</span><br><span class="line"></span><br><span class="line">%addon com_redhat_kdump <span class="params">--enable</span> <span class="params">--reserve-mb=</span>'auto'</span><br><span class="line"></span><br><span class="line">%end</span><br><span class="line"></span><br><span class="line">%post</span><br><span class="line"></span><br><span class="line">%end</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> kickstart </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nginx.service</title>
      <link href="/2019/01/24/nginx-service/"/>
      <url>/2019/01/24/nginx-service/</url>
      <content type="html"><![CDATA[<p>Centos 7中添加自定义nginx启动脚本<br>在/usr/lib/systemd/system/下创建nginx.service<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Nginx Service</span><br><span class="line"><span class="attribute">After</span>=network.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">Type</span>=forking</span><br><span class="line"><span class="attribute">ExecStart</span>=/opt/nginx/sbin/nginx -c /opt/nginx/conf/nginx.conf</span><br><span class="line"><span class="attribute">ExecReload</span>=/opt/nginx/sbin/nginx -s reload</span><br><span class="line"><span class="attribute">ExecStop</span>=/opt/nginx/sbin/nginx -s stop</span><br><span class="line"><span class="attribute">PIDFile</span>=/opt/nginx/logs/nginx.pid</span><br><span class="line"><span class="attribute">PrivateTmp</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure></p><p>给nginx.service加754权限</p>]]></content>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ansible</title>
      <link href="/2018/12/27/ansible/"/>
      <url>/2018/12/27/ansible/</url>
      <content type="html"><![CDATA[<p>Ansible 安装</p><p>一、安装python环境，我这里安装python3.7.2，可以去官网下在源码包；<br><a href="https://www.python.org/" target="_blank" rel="noopener">https://www.python.org/</a></p><p>1)下载软件包；<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk-node01]# wget http<span class="variable">s:</span>//www.<span class="keyword">python</span>.org/ftp/<span class="keyword">python</span>/<span class="number">3.7</span>.<span class="number">2</span>/Python-<span class="number">3.7</span>.<span class="number">2</span>.tar.xz</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>2）安装依赖；<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@elk</span>-node01]<span class="meta">#yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc*</span></span><br></pre></td></tr></table></figure></p><p>3）解压；<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">[root@elk-node01]#</span><span class="bash">xz -d Python-3.7.2.tar.xz</span></span><br><span class="line"><span class="meta">[root@elk-node01]#</span><span class="bash">tar -xvf Python-3.7.2.tar</span></span><br><span class="line"><span class="meta">[root@elk-node01]#</span><span class="bash"><span class="built_in">cd</span> Python-3.7.2</span></span><br><span class="line"><span class="meta">[root@elk-node01]#</span><span class="bash">./configure --prefix=/usr/<span class="built_in">local</span>/python3.7 --<span class="built_in">enable</span>-optimizations</span></span><br><span class="line"><span class="meta">[root@elk-node01]#</span><span class="bash">make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure></p><p>4)更改系统默认python环境；<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">[root@elk-node01]#</span><span class="bash">python --version</span></span><br><span class="line">Python 2.7.5</span><br><span class="line">注：Centos7.4系统环境的Python版本是2.7，我们要更改为我们安装的Python3.7；</span><br><span class="line"><span class="meta">[root@elk-node01]#</span><span class="bash">rm -rf /usr/bin/python</span></span><br><span class="line"><span class="meta">[root@elk-node01]#</span><span class="bash">ln -s /usr/<span class="built_in">local</span>/python3.7/bin/python3 /usr/bin/python</span></span><br><span class="line"><span class="meta">[root@elk-node01]#</span><span class="bash">python --version</span></span><br><span class="line">Python 3.7.2</span><br><span class="line">注：这里已经成为我们安装的版本了；</span><br></pre></td></tr></table></figure></p><p>5）更改yum的Python版本；<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">因为我们更改系统默认版本得Python后yum不能使用，所有我们要更改yum的运行环境；</span><br><span class="line">[root<span class="symbol">@elk</span>-node01]<span class="meta">#vi /usr/bin/yum</span></span><br><span class="line">把<span class="meta">#!/usr/bin/python更改为#!/usr/bin/python2.7</span></span><br></pre></td></tr></table></figure></p><p>6）设置pip环境；<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@elk-node01]#vi /etc/profile</span><br><span class="line">加入一下内容：</span><br><span class="line"><span class="comment">#Pip Env</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PIP_HOME</span>=/usr/local/python3.7</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$PIP_HOME/bin</span><br><span class="line">[root@elk-node01]#source /etc/profile</span><br></pre></td></tr></table></figure></p><p>二、安装ansible;<br>官网地址：<a href="https://www.ansible.com/" target="_blank" rel="noopener">https://www.ansible.com/</a><br>中文权威指南：<a href="http://www.ansible.com.cn/" target="_blank" rel="noopener">http://www.ansible.com.cn/</a><br>GitHub项目地址：<a href="https://github.com/ansible/ansible" target="_blank" rel="noopener">https://github.com/ansible/ansible</a><br>1）下载源码包；<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@elk</span>-node01]<span class="meta">#git clone git://github.com/ansible/ansible.git --recursive</span></span><br><span class="line">[root<span class="symbol">@elk</span>-node01]<span class="meta">#cd ansible</span></span><br><span class="line">[root<span class="symbol">@elk</span>-node01]<span class="meta">#pip install -r ./requirements.txt</span></span><br><span class="line">[root<span class="symbol">@elk</span>-node01]<span class="meta">#python setup.py install</span></span><br><span class="line">[root<span class="symbol">@elk</span>-node01 ansible]<span class="meta"># ansible --version</span></span><br><span class="line">ansible <span class="number">2.8</span><span class="number">.0</span>.dev0</span><br><span class="line">  config file = None</span><br><span class="line">  configured module search path = [<span class="string">'/root/.ansible/plugins/modules'</span>, <span class="string">'/usr/share/ansible/plugins/modules'</span>]</span><br><span class="line">  ansible python module location = /usr/<span class="keyword">local</span>/python3<span class="number">.7</span>/lib/python3<span class="number">.7</span>/site-packages/ansible<span class="number">-2.8</span><span class="number">.0</span>.dev0-py3<span class="number">.7</span>.egg/ansible</span><br><span class="line">  executable location = /usr/<span class="keyword">local</span>/python3<span class="number">.7</span>/bin/ansible</span><br><span class="line">  python version = <span class="number">3.7</span><span class="number">.2</span> (<span class="keyword">default</span>, <span class="built_in">Dec</span> <span class="number">27</span> <span class="number">2018</span>, <span class="number">14</span>:<span class="number">24</span>:<span class="number">59</span>) [GCC <span class="number">4.8</span><span class="number">.5</span> <span class="number">20150623</span> (Red Hat <span class="number">4.8</span><span class="number">.5</span><span class="number">-36</span>)]</span><br></pre></td></tr></table></figure></p><p>Done</p>]]></content>
      
      
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>snmp</title>
      <link href="/2018/12/24/snmp/"/>
      <url>/2018/12/24/snmp/</url>
      <content type="html"><![CDATA[<p>snmpwalk 使用方法<br>ifIndex 端口索引号<br>ifDescr 端口描述<br>ifType 端口类型<br>ifMtu 最大传输包字节数<br>ifSpeed 端口速度<br>ifPhysAddress 物理地址<br>ifOperStatus 操作状态<br>ifLastChange 上次状态更新时间<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">snmpwalk  -v 3 -u<span class="built_in"> user </span>-a MD5 -A<span class="built_in"> community </span>-x DES -X<span class="built_in"> community </span>-l authPriv<span class="built_in"> IP </span>OID</span><br><span class="line">snmpwalk  -v 3 -u<span class="built_in"> user </span>-a MD5 -A<span class="built_in"> community </span>-x DES -X<span class="built_in"> community </span>-l authPriv<span class="built_in"> IP </span>ifDescr #查看所有端口描述信息（可查看端口与所对应的ID号）</span><br><span class="line">-------------------------------------------------------------------------------------------------</span><br><span class="line">snmpwalk  -v 3 -u<span class="built_in"> user </span>-a MD5 -A<span class="built_in"> community </span>-x DES -X<span class="built_in"> community </span>-l authPriv<span class="built_in"> IP </span>ifInOctets</span><br><span class="line">查看所有端口进入流量字节数</span><br><span class="line">例如：</span><br><span class="line">snmpwalk  -v 3 -u<span class="built_in"> user </span>-a MD5 -A<span class="built_in"> community </span>-x DES -X<span class="built_in"> community </span>-l authPriv<span class="built_in"> IP </span>ifInOctets.10101</span><br><span class="line">IF-MIB::ifInOctets.10101 = Counter32: 2613028369</span><br><span class="line">查看ID号是57的端口进入流量字节数（ID号不一定与端口号对应）</span><br><span class="line">也可以这么写：</span><br><span class="line">snmpwalk  -v 3 -u<span class="built_in"> user </span>-a MD5 -A<span class="built_in"> community </span>-x DES -X<span class="built_in"> community </span>-l authPriv<span class="built_in"> IP </span>IF-MIB::ifInOctets.10101</span><br><span class="line">IF-MIB::ifInOctets.10101 = Counter32: 2645393159</span><br><span class="line">-------------------------------------------------------------------------------------------------</span><br><span class="line">snmpwalk  -v 3 -u<span class="built_in"> user </span>-a MD5 -A<span class="built_in"> community </span>-x DES -X<span class="built_in"> community </span>-l authPriv<span class="built_in"> IP </span>ifOutOctets</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
        <tags>
            
            <tag> SNMP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Elasticsearch(增、删、改、查)</title>
      <link href="/2018/12/19/elk-es2/"/>
      <url>/2018/12/19/elk-es2/</url>
      <content type="html"><![CDATA[<p>一、创建一个index：<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk-node01]<span class="comment"># curl -X PUT 'localhost:9200/test-2018-12-19?pretty'</span></span><br><span class="line">[root@elk-node01]<span class="comment"># curl -X GET 'localhost:9200/_cat/indices?v'</span></span><br><span class="line">health status <span class="keyword">index</span>           uuid                   pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class="line">green  <span class="keyword">open</span>   test-<span class="number">2018</span>-<span class="number">12</span>-<span class="number">19</span> <span class="number">7</span>EPWTxKHTBeU6z9KmTJUMg   <span class="number">5</span>   <span class="number">1</span>          <span class="number">0</span>            <span class="number">0</span>      <span class="number">2.5</span>kb          <span class="number">1.2</span>kb</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>二、创建一个字段：<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@elk-node01]# curl -X PUT <span class="symbol">'localhost</span>:<span class="number">9200</span>/test-<span class="number">2018</span>-<span class="number">12</span>-<span class="number">19</span>/_doc/<span class="number">1</span>?pretty' -H <span class="symbol">'Content</span>-<span class="keyword">Type</span>: application/json' -d'&#123;</span><br><span class="line">&gt; <span class="string">"name"</span>: <span class="string">"zhangsan"</span> &#125;</span><br><span class="line">&gt; '</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : "<span class="type">test</span>-<span class="number">2018</span>-<span class="number">12</span>-<span class="number">19</span><span class="string">",</span></span><br><span class="line"><span class="string">  "</span>_type<span class="string">" : "</span>_doc<span class="string">",</span></span><br><span class="line"><span class="string">  "</span>_id<span class="string">" : "</span><span class="number">1</span><span class="string">",</span></span><br><span class="line"><span class="string">  "</span>_version<span class="string">" : 1,</span></span><br><span class="line"><span class="string">  "</span>result<span class="string">" : "</span>created<span class="string">",</span></span><br><span class="line"><span class="string">  "</span>_shards<span class="string">" : &#123;</span></span><br><span class="line"><span class="string">    "</span>total<span class="string">" : 2,</span></span><br><span class="line"><span class="string">    "</span>successful<span class="string">" : 2,</span></span><br><span class="line"><span class="string">    "</span>failed<span class="string">" : 0</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  "</span>_seq_no<span class="string">" : 0,</span></span><br><span class="line"><span class="string">  "</span>_primary_term<span class="string">" : 1</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></p><p>三、查看<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@elk</span>-node01]<span class="meta">#curl -X GET <span class="string">"localhost:9200/test-2018-12-19/_doc/1?pretty"</span></span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"log-test-2018-12-19"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"_source"</span> : &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"lisi"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>四、更新<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@elk-node01 ~]# curl -X POST <span class="string">"192.168.0.60:9200/log-test-2018-12-19/_doc/1/_update?pretty"</span> -H <span class="symbol">'Content</span>-<span class="keyword">Type</span>: application/json' -d'</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;   <span class="string">"doc"</span>: &#123; <span class="string">"name"</span>: <span class="string">"tianqi"</span> &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; '</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : "<span class="type">log</span>-test-<span class="number">2018</span>-<span class="number">12</span>-<span class="number">19</span><span class="string">",</span></span><br><span class="line"><span class="string">  "</span>_type<span class="string">" : "</span>_doc<span class="string">",</span></span><br><span class="line"><span class="string">  "</span>_id<span class="string">" : "</span><span class="number">1</span><span class="string">",</span></span><br><span class="line"><span class="string">  "</span>_version<span class="string">" : 3,</span></span><br><span class="line"><span class="string">  "</span>result<span class="string">" : "</span>updated<span class="string">",</span></span><br><span class="line"><span class="string">  "</span>_shards<span class="string">" : &#123;</span></span><br><span class="line"><span class="string">    "</span>total<span class="string">" : 2,</span></span><br><span class="line"><span class="string">    "</span>successful<span class="string">" : 2,</span></span><br><span class="line"><span class="string">    "</span>failed<span class="string">" : 0</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  "</span>_seq_no<span class="string">" : 2,</span></span><br><span class="line"><span class="string">  "</span>_primary_term<span class="string">" : 2</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></p><p>五、删除index<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@elk</span>-node01]<span class="meta"># curl -X DELETE <span class="string">"localhost:9200/test-2018-12-19?pretty"</span></span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"acknowledged"</span> : <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ELK-Elasticsearch</title>
      <link href="/2018/12/18/elk-es/"/>
      <url>/2018/12/18/elk-es/</url>
      <content type="html"><![CDATA[<p>本次使用YUM安装：<br>1、安装java8以上版本：<br>2.设置java环境变量：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@elk-node01 ~]# vi /etc/profile</span><br><span class="line"><span class="comment">#Java Env</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/opt/jdk1.8.0_191</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CLASSPATH</span>=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$JAVA_HOME/bin</span><br><span class="line">[root@elk-node01 ~]# source /etc/profile</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>3、设置yum源：<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@elk-node01 ~]</span><span class="comment"># rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"><span class="section">[root@elk-node01 ~]</span><span class="comment"># vi /etc/yum.repos.d/elastic.repo</span></span><br><span class="line"><span class="section">[elastic-6.x]</span></span><br><span class="line"><span class="attr">name</span>=Elastic repository for <span class="number">6</span>.x packages</span><br><span class="line"><span class="attr">baseurl</span>=https://artifacts.elastic.co/packages/<span class="number">6</span>.x/yum</span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">autorefresh</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">type</span>=rpm-md</span><br></pre></td></tr></table></figure></p><p>4、安装:<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@elk</span>-node01 ~]<span class="meta">#yum install elasticsearch -y</span></span><br></pre></td></tr></table></figure></p><p>5、检查集群状态：<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk-node01 elasticsearch-head]<span class="comment"># curl -X GET '192.168.0.60:9200/_cat/health?v'</span></span><br><span class="line">epoch      timestamp cluster     status <span class="keyword">node</span>.<span class="title">total</span> <span class="keyword">node</span>.<span class="title">data</span> shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent</span><br><span class="line"><span class="number">1545199574</span> <span class="number">06</span>:<span class="number">06</span>:<span class="number">14</span>  elk-cluster green           <span class="number">2</span>         <span class="number">2</span>     <span class="number">10</span>   <span class="number">5</span>    <span class="number">0</span>    <span class="number">0</span>        <span class="number">0</span>             <span class="number">0</span>                  -                <span class="number">100.0</span>%</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>kubernetes 的增删改查</title>
      <link href="/2018/09/15/kubernetes-01/"/>
      <url>/2018/09/15/kubernetes-01/</url>
      <content type="html"><![CDATA[<p>一、运行一个nginx镜像：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl <span class="builtin-name">run</span> ngix-deploy <span class="attribute">--image</span>=nginx:1.14-alpine <span class="attribute">--port</span>=80 <span class="attribute">--replicas</span>=1</span><br><span class="line">[root@master ~]# kubectl <span class="builtin-name">get</span> deployment</span><br><span class="line">NAME          DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">ngix-deploy   1         1         1            1           54s</span><br><span class="line">[root@master ~]# kubectl <span class="builtin-name">get</span> pods</span><br><span class="line">NAME                           READY     STATUS    RESTARTS   AGE</span><br><span class="line">ngix-deploy-788c5f6b7f-b24d4   1/1       Running   0          1m</span><br><span class="line">[root@master ~]# kubectl <span class="builtin-name">get</span> pods -o wide</span><br><span class="line">NAME                           READY     STATUS    RESTARTS   AGE      <span class="built_in"> IP </span>          NODE      NOMINATED NODE</span><br><span class="line">ngix-deploy-788c5f6b7f-b24d4   1/1       Running   0          1m        10.244.2.2   node02    &lt;none&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>bonding</title>
      <link href="/2018/09/14/bonding/"/>
      <url>/2018/09/14/bonding/</url>
      <content type="html"><![CDATA[<p>一、bonding技术：<br>bonding(绑定)是一种linux系统下的网卡绑定技术，可以把服务器上n个物理网卡在系统内部抽象(绑定)成一个逻辑上的网卡，能够提升网络吞吐量、实现网络冗余、负载等功能，有很多优势。</p><p>bonding技术是linux系统内核层面实现的，它是一个内核模块(驱动)。使用它需要系统有这个模块, 我们可以modinfo命令查看下这个模块的信息, 一般来说都支持.<br>bonding的七种工作模式:<br><a id="more"></a><br>bonding技术提供了七种工作模式，在使用的时候需要指定一种，每种有各自的优缺点.<br>    <figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>balance-rr (mode=<span class="number">0</span>)       默认, 有高可用 (容错) 和负载均衡的功能,  需要交换机的配置，每块网卡轮询发包 (流量分发比较均衡);</span><br><span class="line"><span class="number">2.</span>active-backup (mode=<span class="number">1</span>)  只有高可用 (容错) 功能, 不需要交换机配置, 这种模式只有一块网卡工作, 对外只有一个mac地址。缺点是端口利用率比较低;</span><br><span class="line"><span class="number">3.</span>balance-xor (mode=<span class="number">2</span>)     不常用;</span><br><span class="line"><span class="number">4.</span>broadcast (mode=<span class="number">3</span>)        不常用;</span><br><span class="line"><span class="number">5.802</span><span class="number">.3</span>ad (mode=<span class="number">4</span>)          IEEE <span class="number">802.3</span>ad 动态链路聚合，需要交换机配置，没用过;</span><br><span class="line"><span class="number">6.</span>balance-tlb (mode=<span class="number">5</span>)      不常用;</span><br><span class="line"><span class="number">7.</span>balance-alb (mode=<span class="number">6</span>)     有高可用 ( 容错 )和负载均衡的功能，不需要交换机配置  (流量分发到每个接口不是特别均衡);</span><br></pre></td></tr></table></figure></p><p>具体的网上有很多资料，了解每种模式的特点根据自己的选择就行, 一般会用到0、1、4、6这几种模式。<br>二、Centos 7配置bonding:<br>环境：<br>    <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">系统：Centos <span class="number">7.4</span>；</span><br><span class="line">网卡：em1,em3；</span><br><span class="line"><span class="symbol">mode:</span> <span class="number">1</span>(主备)；</span><br><span class="line">`</span><br></pre></td></tr></table></figure></p><p>1.在/etc/sysconfig/network-scripts下新建ifcfg-bond0<br>    <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[localadmin@zabbix network-scripts]</span><span class="comment"># vim ifcfg-bond0</span></span><br><span class="line"><span class="attr">DEVICE</span>=bond0</span><br><span class="line"><span class="attr">TYPE</span>=Bond</span><br><span class="line"><span class="attr">IPADDR</span>=#ip地址</span><br><span class="line"><span class="attr">NETMASK</span>=#子网掩码</span><br><span class="line"><span class="attr">GATEWAY</span>=#网关</span><br><span class="line"><span class="attr">USERCTL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=none</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br></pre></td></tr></table></figure></p><p>2.编辑ifcfg-em1<br>    <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[localadmin@zabbix network-scripts]</span><span class="comment"># vim ifcfg-em1</span></span><br><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="attr">PROXY_METHOD</span>=none</span><br><span class="line"><span class="attr">BROWSER_ONLY</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=none#dhcp改为none</span><br><span class="line"><span class="attr">DEFROUTE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPV4_FAILURE_FATAL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">IPV6INIT</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">IPV6_AUTOCONF</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">IPV6_DEFROUTE</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">IPV6_FAILURE_FATAL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">IPV6_ADDR_GEN_MODE</span>=stable-privacy</span><br><span class="line"><span class="attr">NAME</span>=em1</span><br><span class="line"><span class="attr">DEVICE</span>=em1</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span>#<span class="literal">no</span>改为<span class="literal">yes</span></span><br><span class="line"><span class="attr">MASTER</span>=bond0</span><br><span class="line"><span class="attr">USERCTL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">SLAVE</span>=<span class="literal">yes</span></span><br></pre></td></tr></table></figure></p><p>3.em3和em1相同：<br>4.在/etc/modprobe.d下新建bonding.conf<br>    <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[localadmin@zabbix modprobe.d]$</span><br><span class="line">alias bond0 bonding</span><br><span class="line">options bond0 <span class="attribute">mode</span>=1 <span class="attribute">miimon</span>=100</span><br></pre></td></tr></table></figure></p><p>5.测试方法：<br>    <figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[localadmin@zabbix modprobe.d]$ nmcli con show</span><br><span class="line">NAME        UUID                                  TYPE            DEVICE </span><br><span class="line">Bond bond0  ad33d8b0<span class="number">-1</span>f7b-cab9<span class="number">-9447</span>-ba07f855b143  bond            bond0  </span><br><span class="line">em1         <span class="number">1</span>dad842d<span class="number">-1912</span>-ef5a-a43a-bc238fb267e7  <span class="number">802</span><span class="number">-3</span>-ethernet  em1    </span><br><span class="line">em3         <span class="number">6</span>b2b49df-c30e<span class="number">-4</span>cd6<span class="number">-807</span>c<span class="number">-805</span>d367f2caf  <span class="number">802</span><span class="number">-3</span>-ethernet  em3    </span><br><span class="line">em2         da2824cc-bbce<span class="number">-444</span>a-b129<span class="number">-04</span>f5f6959482  <span class="number">802</span><span class="number">-3</span>-ethernet  --     </span><br><span class="line">em4         <span class="number">41</span>b7896a-ed2b<span class="number">-467</span>e-a9de<span class="number">-564065315758</span>  <span class="number">802</span><span class="number">-3</span>-ethernet  --</span><br></pre></td></tr></table></figure></p><p>直接插拔网线也可以~方法很多！！！</p>]]></content>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用kubeadm部署kubernetes</title>
      <link href="/2018/09/14/kubernetes/"/>
      <url>/2018/09/14/kubernetes/</url>
      <content type="html"><![CDATA[<p>本次介绍使用kubeadm部署kubernetes集群<br>环境介绍：<br>    1.准备3台服务器（本实验使用虚拟机）一个master，两个node；<br>    2.各节点主机名称解析：DNS或者hosts（本人hosts）；<br>    3.各节点iptables及firewalld服务disable；<br>    4.各节点时间同步；<br>    5.配置master和node的免密登陆；<br>一、配置kubernetes及docker的yum仓库(master和node都需要配置)：<br>    1.docker仓库配置；<br>    <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# wget -P <span class="regexp">/etc/yum</span>.repos.d<span class="regexp">/ https:/</span><span class="regexp">/mirrors.aliyun.com/</span>docker-ce<span class="regexp">/linux/</span>centos<span class="regexp">/docker-ce.repo</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><p>2.kubernetes仓库配置：<br>在/etc/yum.repos.d下创建kubernetes.repo文件，编辑添加如下内容：<br>    <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@master ~]</span><span class="comment"># vim /etc/yum.repos.d/kubernetes.repo </span></span><br><span class="line"><span class="attr">name</span>=Kubernetes Repo</span><br><span class="line"><span class="attr">baseurl</span>=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x<span class="number">86_64</span>/</span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">gpgkey</span>=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>二、安装master程序包：<br>    <figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="keyword">master</span> <span class="title">~]# yum</span> install docker-ce kubelet kubectl kubeadm -y</span><br></pre></td></tr></table></figure></p><p>三、初始化master节点：<br>1.配置docker Unit File中的Environment变量，定义HTTPS_PROXY和NO_PROXY（/usr/lib/systemd/system/docker.service）<br>    <figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="keyword">master</span> <span class="title">~]# vim</span> /usr/lib/systemd/system/docker.service</span><br><span class="line"><span class="attr">Environment=</span><span class="string">"HTTPS_PROXY=http://www.ik8s.io:10080"</span></span><br><span class="line"><span class="attr">Environment=</span><span class="string">"NO_PROXY=127.0.0.0/8,172.20.0.0/16"</span></span><br><span class="line">[root@<span class="keyword">master</span> <span class="title">~]# systemctl</span> daemon-reload</span><br><span class="line">[root@<span class="keyword">master</span> <span class="title">~]# systemctl</span> <span class="literal">start</span> docker.service</span><br><span class="line">[root@<span class="keyword">master</span> <span class="title">~]# systemctl</span> enable docker.service</span><br></pre></td></tr></table></figure></p><p>2.编辑kubelet的配置文件/etc/sysconfig/kubelet,设置忽略Swap启用状态错误提示，内容如下：<br>    <figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="keyword">master</span> <span class="title">~]# cat</span> /etc/sysconfig/kubelet </span><br><span class="line"><span class="attr">KUBELET_EXTRA_ARGS=</span><span class="string">"--fail-swap-on=false"</span></span><br><span class="line">[root@<span class="keyword">master</span> <span class="title">~]# systemctl</span> enable kubelet</span><br></pre></td></tr></table></figure></p><p>3.初始化master节点：<br>    <figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubeadm init --kubernetes-version=v1<span class="number">.11</span><span class="number">.2</span> --pod-network-cidr=<span class="number">10.244</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">16</span> --service-cidr=<span class="number">10.96</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">12</span> --ignore-preflight-errors=Swap</span><br></pre></td></tr></table></figure></p><p>注：参数解释<br>    –kubernetes-version         kubernetes的版本，我这里是v1.11.2；<br>    –pod-network-cidr             pod的网络；<br>    –service-cidr                 service的网络；<br>    –ignore-preflight-errors    要忽略的错误，我这里忽略Swap错误；<br>注意：初始化会pull镜像，初始化的时间长短根据实际网络状况决定；<br>      初始化完成后，请记录kubeadm join的全部内容，后面加节点使用；</p><p>5.初始化kubectl:<br>    <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">[root@master ~]# cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">[root@master ~]# chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure></p><p>6.添加flannel网络附件：<br>    <figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@<span class="keyword">master</span> <span class="title">~]# kubectl</span> apply -f https://raw.githubusercontent.com/coreos/flannel/<span class="literal">master</span>/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure></p><p>7.验证master节点是否就绪：<br>    <figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@<span class="keyword">master</span> <span class="title">~]# kubectl</span> get nodes</span><br><span class="line">NAME      STATUS    ROLES     AGE       <span class="keyword">VERSION</span></span><br><span class="line"><span class="keyword">master</span>    <span class="title">Ready</span>     <span class="keyword">master</span>    <span class="title">3d</span>        v1.<span class="number">11.2</span></span><br></pre></td></tr></table></figure></p><p>四、初始化node节点(node01和node02操作相同)：<br>1.设置dokcer及kubernetes的仓库和master相同；<br>2.安装软件包:<br>    <figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@node01</span> ~]<span class="meta"># yum install docker-ce kubelet kubeadm</span></span><br></pre></td></tr></table></figure></p><p>3.配置docker Unit File和kubelet和master相同操作；<br>4.设置docker和kubelet开机启动和master相同操作；<br>5.将节点加入master中：<br>    <figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">kubeadm</span> <span class="comment">join</span> <span class="comment">192</span><span class="string">.</span><span class="comment">168</span><span class="string">.</span><span class="comment">0</span><span class="string">.</span><span class="comment">200:6443</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">token</span> <span class="comment">ddqen4</span><span class="string">.</span><span class="comment">ioh8yqmy8xogd4od</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">discovery</span><span class="literal">-</span><span class="comment">token</span><span class="literal">-</span><span class="comment">ca</span><span class="literal">-</span><span class="comment">cert</span><span class="literal">-</span><span class="comment">hash</span> <span class="comment">sha256:1a707fa28d13adee881f39e3b240040be54fb00db08be1956db2907b500bcf06</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">ignore</span><span class="literal">-</span><span class="comment">preflight</span><span class="literal">-</span><span class="comment">errors=Swap</span></span><br></pre></td></tr></table></figure></p><p>注：上面的token是我的，这各值为master初始化完成后让记录的那个值；<br>6.在master上验证是否加入成功：<br>    <figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="keyword">master</span> <span class="title">~]# kubectl</span> get nodes</span><br><span class="line">NAME      STATUS    ROLES     AGE       <span class="keyword">VERSION</span></span><br><span class="line"><span class="keyword">master</span>    <span class="title">Ready</span>     <span class="keyword">master</span>    <span class="title">3d</span>        v1.<span class="number">11.2</span></span><br><span class="line">node01    Ready     <span class="tag">&lt;none&gt;</span>    <span class="number">3</span>d        v1.<span class="number">11.2</span></span><br><span class="line">node02    Ready     <span class="tag">&lt;none&gt;</span>    <span class="number">3</span>d        v1.<span class="number">11.2</span></span><br></pre></td></tr></table></figure></p><p>看到如上结果，那么恭喜你，你已经拥有一个kubernetes的集群了；</p>]]></content>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Zabbix Centos 7.4 Agent 安装脚本</title>
      <link href="/2018/09/14/zabbix/"/>
      <url>/2018/09/14/zabbix/</url>
      <content type="html"><![CDATA[<p>本章的脚本是自己工作中生产环境在Centos 7.4中安装zabbix client的shell脚本，配合ansible使用，仅供参考<br><a id="more"></a><br>1、脚本内容：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">check_ok() &#123;</span><br><span class="line"><span class="keyword">if</span> [ $? != 0 ]</span><br><span class="line">then</span><br><span class="line">    echo <span class="string">"Error, Check the error log."</span></span><br><span class="line">    <span class="keyword">exit</span> 1</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line">zabbix_agentd_install() &#123;</span><br><span class="line">    PREFIX=/usr/<span class="keyword">local</span>/zabbix_agentd</span><br><span class="line">    HOSTNAME=`ifconfig bond0 | grep netmask |awk '&#123;<span class="keyword">print</span> <span class="variable">$2&#125;</span>'`</span><br><span class="line">    <span class="keyword">cd</span> /tmp/zabbix_tmp</span><br><span class="line">    check_ok</span><br><span class="line">    sudo tar -xzvf zabbix-3.4.12.tar.gz &gt;&gt;/tmp/zabbix_tmp/<span class="keyword">error</span>.<span class="built_in">log</span></span><br><span class="line">    check_ok</span><br><span class="line">    <span class="keyword">cd</span> zabbix-3.4.12</span><br><span class="line">    check_ok</span><br><span class="line">    sudo ./configure --prefix=<span class="variable">$PREFIX</span> --enable-agent &gt;&gt;/tmp/zabbix_tmp/<span class="keyword">error</span>.<span class="built_in">log</span></span><br><span class="line">    check_ok</span><br><span class="line">    sudo make</span><br><span class="line">    check_ok</span><br><span class="line">    sudo make install</span><br><span class="line">    check_ok</span><br><span class="line">    sudo cp /tmp/zabbix_tmp/zabbix-3.4.12/misc/init.<span class="keyword">d</span>/fedora/core/zabbix_agentd /etc/init.<span class="keyword">d</span>/</span><br><span class="line">    check_ok</span><br><span class="line">    sudo chmod +x /etc/init.<span class="keyword">d</span>/zabbix_agentd</span><br><span class="line">    check_ok</span><br><span class="line">    sudo sed -i 's/BASEDIR=\/usr\/<span class="keyword">local</span>/BASEDIR=\/usr\/<span class="keyword">local</span>\/zabbix_agentd/<span class="keyword">g</span>' /etc/init.<span class="keyword">d</span>/zabbix_agentd</span><br><span class="line">    check_ok</span><br><span class="line">    sudo sed -i 's/PIDFILE=\/tmp\/<span class="variable">$BINARY_NAME</span>.pid/PIDFILE=\/usr\/<span class="keyword">local</span>\/zabbix_agentd\/<span class="keyword">var</span>\/<span class="variable">$BINARY_NAME</span>.pid/<span class="keyword">g</span>' /etc/init.<span class="keyword">d</span>/zabbix_agentd</span><br><span class="line">    check_ok</span><br><span class="line">    sudo sed -i 's/# PidFile=\/tmp\/zabbix_agentd.pid/PidFile=\/usr\/<span class="keyword">local</span>\/zabbix_agentd\/<span class="keyword">var</span>\/zabbix_agentd.pid/<span class="keyword">g</span>' /usr/<span class="keyword">local</span>/zabbix_agentd/etc/zabbix_agentd.<span class="keyword">conf</span></span><br><span class="line">    check_ok</span><br><span class="line">    sudo sed -i 's/LogFile=\/tmp\/zabbix_agentd.<span class="keyword">log</span>/LogFile=\/usr\/<span class="keyword">local</span>\/zabbix_agentd\/<span class="keyword">var</span>\/zabbix_agentd.<span class="keyword">log</span>/<span class="keyword">g</span>' /usr/<span class="keyword">local</span>/zabbix_agentd/etc/zabbix_agentd.<span class="keyword">conf</span></span><br><span class="line">    check_ok</span><br><span class="line">    sudo sed -i 's/Server=127.0.0.1/Server=10.129.15.51/<span class="keyword">g</span>' /usr/<span class="keyword">local</span>/zabbix_agentd/etc/zabbix_agentd.<span class="keyword">conf</span></span><br><span class="line">    check_ok</span><br><span class="line">    sudo sed -i 's/^ServerActive=127.0.0.1/ServerActive=10.129.15.51/<span class="keyword">g</span>' /usr/<span class="keyword">local</span>/zabbix_agentd/etc/zabbix_agentd.<span class="keyword">conf</span></span><br><span class="line">    check_ok</span><br><span class="line">    sudo sed -i <span class="string">"s/Hostname=Zabbix server/Hostname=$&#123;HOSTNAME&#125;/g"</span> /usr/<span class="keyword">local</span>/zabbix_agentd/etc/zabbix_agentd.<span class="keyword">conf</span></span><br><span class="line">    check_ok</span><br><span class="line">    sudo sed -i '154s/.*/HostnameItem=system.hostname/' /usr/<span class="keyword">local</span>/zabbix_agentd/etc/zabbix_agentd.<span class="keyword">conf</span></span><br><span class="line">    check_ok</span><br><span class="line">    sudo <span class="keyword">mkdir</span> -p <span class="variable">$PREFIX</span>/<span class="keyword">var</span></span><br><span class="line">    check_ok</span><br><span class="line">    sudo groupadd zabbix</span><br><span class="line">    check_ok</span><br><span class="line">    sudo useradd -<span class="keyword">g</span> zabbix -<span class="keyword">M</span> -s /sbin/nologin zabbix</span><br><span class="line">    check_ok</span><br><span class="line">    <span class="keyword">cd</span> <span class="variable">$PREFIX</span></span><br><span class="line">    check_ok</span><br><span class="line">    sudo chown -R zabbix.zabbix <span class="keyword">var</span>/</span><br><span class="line">    check_ok</span><br><span class="line">    sudo /etc/init.<span class="keyword">d</span>/zabbix_agentd start</span><br><span class="line">    check_ok</span><br><span class="line">&#125;</span><br><span class="line">sudo ps -ef | grep zabbix_agentd | grep -v grep &gt;&gt;/tmp/zabbix_tmp/<span class="keyword">error</span>.<span class="built_in">log</span></span><br><span class="line"><span class="keyword">if</span> [ $? -<span class="keyword">eq</span> 0 ]</span><br><span class="line">then</span><br><span class="line">    echo <span class="string">"start process..."</span></span><br><span class="line">    <span class="keyword">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    zabbix_agentd_install</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p><p>2、ansible-playbook的yaml文件<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">- hosts: test</span><br><span class="line">  remote_user: localadmin</span><br><span class="line">  tasks:</span><br><span class="line">  - name: create /tmp/zabbix_tmp dir</span><br><span class="line">    file: path=&#123;&#123; item &#125;&#125; <span class="attribute">state</span>=directory</span><br><span class="line">    with_items:</span><br><span class="line">    - /tmp/zabbix_tmp</span><br><span class="line">  - name: copy install_shell <span class="keyword">to</span> clien</span><br><span class="line">    copy: <span class="attribute">src</span>=/opt/software/install.sh <span class="attribute">dest</span>=/tmp/zabbix_tmp/install.sh <span class="attribute">mode</span>=0755</span><br><span class="line">  - name: sent tar package <span class="keyword">to</span> client</span><br><span class="line">    copy: <span class="attribute">src</span>=/opt/software/zabbix-3.4.12.tar.gz <span class="attribute">dest</span>=/tmp/zabbix_tmp/zabbix-3.4.12.tar.gz</span><br><span class="line">    notify: install shell</span><br><span class="line">  handlers:</span><br><span class="line">  - name: install shell</span><br><span class="line">    shell: /bin/bash /tmp/zabbix_tmp/install.sh</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>随便聊</title>
      <link href="/2018/09/06/hello-world/"/>
      <url>/2018/09/06/hello-world/</url>
      <content type="html"><![CDATA[<p>总结个人工作中遇到的问题总结及学习，只是笔记，仅供参考！</p>]]></content>
      
      
    </entry>
    
  
  
</search>
